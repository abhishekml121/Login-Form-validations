{"ast":null,"code":"var _jsxFileName = \"/var/REACT/react_practice/react_learning/react_projects/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [validEmail, SetValidEmail] = useState(null);\n  const [email, SetEmail] = useState(\"\");\n  const [validForm, SetValidForm] = useState(false);\n  const [validPhoneNumber, SetValidPhoneNumber] = useState(false);\n  const [phoneNumber, SetPhoneNumber] = useState(false);\n  const [passwordColor, SetPasswordColor] = useState(\"transparent\"); //   const [submitButton, SetSubmitButton] = useState(false);\n\n  const isValidEmail = email => {\n    console.log(email);\n    const checkingEmail = String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/); // true or false\n\n    return checkingEmail;\n  };\n\n  function checkPassword(e) {\n    const password = e.target.value;\n    let strength = 0;\n\n    if (password.match(/[a-z]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[A-Z]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[0-9]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[$@#&!]+/)) {\n      strength += 1;\n    }\n\n    if (password.length > 4 && password.length <= 8 && strength === 4) {\n      strength += 1;\n    }\n\n    switch (strength) {\n      case 0:\n        SetPasswordColor(\"transparent\");\n        break;\n\n      case 1:\n      case 2:\n        SetPasswordColor(\"red\");\n        break;\n\n      case 3:\n      case 4:\n        SetPasswordColor(\"yellow\");\n        break;\n\n      case 5:\n        SetPasswordColor(\"#15da15\");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const checkingEmail = isValidEmail(email); // let hasError = true;\n\n    if (checkingEmail) {\n      SetValidEmail(true); //   hasError = false;\n    } else {\n      SetValidEmail(false);\n    }\n\n    if (phoneNumber.length < 10) {\n      SetValidPhoneNumber(false);\n    } else {\n      SetValidPhoneNumber(true); //   hasError = false;\n    } // if(hasError === true){\n    //     SetSubmitButton(true);\n    // }else{\n    //     SetSubmitButton(false);\n    // }\n\n  };\n\n  const isValidPhone = e => {\n    const phoneNumber = e.target.value;\n    SetPhoneNumber(phoneNumber);\n  };\n\n  const emailHandler = e => {\n    const email = e.target.value;\n    SetEmail(email);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: email,\n        onChange: emailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), !validEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error email_error\",\n        children: \"Email is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-color-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          maxLength: \"8\",\n          id: \"password\",\n          onChange: checkPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password_color\",\n          style: {\n            backgroundColor: passwordColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"10\",\n        id: \"phone\",\n        onChange: isValidPhone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), !validPhoneNumber && phoneNumber.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error phone_error\",\n        children: \"Phone must have atmost 10 digits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitButtonContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"zGOB762dERMncDJZefefT2krbQ0=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/var/REACT/react_practice/react_learning/react_projects/src/components/Form/Form.js"],"names":["React","useState","useEffect","Form","validEmail","SetValidEmail","email","SetEmail","validForm","SetValidForm","validPhoneNumber","SetValidPhoneNumber","phoneNumber","SetPhoneNumber","passwordColor","SetPasswordColor","isValidEmail","console","log","checkingEmail","String","toLowerCase","match","checkPassword","e","password","target","value","strength","length","formSubmitHandler","preventDefault","isValidPhone","emailHandler","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./form.css\";\n\nconst Form = () => {\n  const [validEmail, SetValidEmail] = useState(null);\n  const [email, SetEmail] = useState(\"\");\n  const [validForm, SetValidForm] = useState(false);\n  const [validPhoneNumber, SetValidPhoneNumber] = useState(false);\n  const [phoneNumber, SetPhoneNumber] = useState(false);\n  const [passwordColor, SetPasswordColor] = useState(\"transparent\");\n//   const [submitButton, SetSubmitButton] = useState(false);\n\n  const isValidEmail = (email) => {\n    console.log(email);\n    const checkingEmail = String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      ); // true or false\n    return checkingEmail;\n  };\n\n  function checkPassword(e) {\n    const password = e.target.value;\n    let strength = 0;\n    if (password.match(/[a-z]+/)) {\n      strength += 1;\n    }\n    if (password.match(/[A-Z]+/)) {\n      strength += 1;\n    }\n    if (password.match(/[0-9]+/)) {\n      strength += 1;\n    }\n    if (password.match(/[$@#&!]+/)) {\n      strength += 1;\n    }\n\n    if (password.length > 4 && password.length <= 8 && strength === 4) {\n      strength += 1;\n    }\n\n    switch (strength) {\n      case 0:\n        SetPasswordColor(\"transparent\");\n        break;\n\n      case 1:\n      case 2:\n        SetPasswordColor(\"red\");\n        break;\n\n      case 3:\n      case 4:\n        SetPasswordColor(\"yellow\");\n        break;\n\n      case 5:\n        SetPasswordColor(\"#15da15\");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    const checkingEmail = isValidEmail(email);\n    // let hasError = true;\n    if (checkingEmail) {\n      SetValidEmail(true);\n    //   hasError = false;\n    } else {\n      SetValidEmail(false);\n    }\n    \n    if (phoneNumber.length < 10) {\n      SetValidPhoneNumber(false);\n    } else {\n      SetValidPhoneNumber(true);\n    //   hasError = false;\n    }\n\n    // if(hasError === true){\n    //     SetSubmitButton(true);\n    // }else{\n    //     SetSubmitButton(false);\n    // }\n  };\n  const isValidPhone = (e) => {\n    const phoneNumber = e.target.value;\n    SetPhoneNumber(phoneNumber);\n  };\n\n  const emailHandler = (e) => {\n    const email = e.target.value;\n    SetEmail(email);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"email_container\">\n        <label htmlFor=\"email\">Email</label>\n        {/* we can also use type=\"email\" */}\n        <input type=\"text\" id=\"email\" value={email} onChange={emailHandler} />\n        {!validEmail && (\n          <div className=\"error email_error\">Email is not valid</div>\n        )}\n      </div>\n      <div className=\"password_container\">\n        <label htmlFor=\"password\">Password</label>\n        <div className=\"password-color-wrapper\">\n          <input\n            type=\"password\"\n            maxLength=\"8\"\n            id=\"password\"\n            onChange={checkPassword}\n          />\n          <div\n            className=\"password_color\"\n            style={{ backgroundColor: passwordColor }}\n          ></div>\n        </div>\n      </div>\n      <div className=\"phone_container\">\n        <label htmlFor=\"phone\">Phone</label>\n        <input type=\"text\" maxLength=\"10\" id=\"phone\" onChange={isValidPhone} />\n        {!validPhoneNumber && phoneNumber.length > 0 && (\n          <div className=\"error phone_error\">\n            Phone must have atmost 10 digits\n          </div>\n        )}\n      </div>\n\n      <div className=\"submitButtonContainer\">\n        <input type=\"submit\" value=\"submit\" className=\"button\" />\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}