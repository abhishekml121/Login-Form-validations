{"ast":null,"code":"var _jsxFileName = \"/var/REACT/react_practice/react_learning/react_projects/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [validEmail, SetValidEmail] = useState(null);\n  const [email, SetEmail] = useState(\"\");\n  const [validPhoneNumber, SetValidPhoneNumber] = useState(null);\n  const [phoneNumber, SetPhoneNumber] = useState(\"\");\n  const [passwordColor, SetPasswordColor] = useState(\"transparent\");\n  const [ValidPassword, SetValidPassword] = useState(false);\n  const [showWelcomeMessage, SetShowWelcomeMessage] = useState(false);\n\n  const isValidEmail = email => {\n    console.log(email);\n    const checkingEmail = String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/); // true or false\n\n    return checkingEmail;\n  };\n\n  function checkPassword(e) {\n    const password = e.target.value;\n    let strength = 0;\n\n    if (password.match(/[a-z]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[A-Z]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[0-9]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[$@#&!]+/)) {\n      strength += 1;\n    }\n\n    if (password.length > 4 && password.length <= 8 && strength === 4) {\n      strength += 1;\n    }\n\n    switch (strength) {\n      case 0:\n        SetPasswordColor(\"transparent\");\n        break;\n\n      case 1:\n      case 2:\n        SetPasswordColor(\"red\");\n        break;\n\n      case 3:\n      case 4:\n        SetPasswordColor(\"yellow\");\n        break;\n\n      case 5:\n        SetPasswordColor(\"#15da15\");\n        SetValidPassword(true);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const checkingEmail = isValidEmail(email);\n\n    if (checkingEmail) {\n      SetValidEmail(true);\n    } else {\n      SetValidEmail(false);\n    }\n\n    if (phoneNumber.length < 10) {\n      SetValidPhoneNumber(false);\n    } else {\n      SetValidPhoneNumber(true);\n    }\n\n    if (validPhoneNumber === true && validEmail === true && ValidPassword === true) {\n      SetShowWelcomeMessage(true);\n    }\n  };\n\n  const PhoneHandler = e => {\n    const phoneNumber = e.target.value;\n    SetPhoneNumber(phoneNumber);\n\n    if (phoneNumber.length === 0) {\n      SetValidPhoneNumber(null);\n    }\n  };\n\n  const emailHandler = e => {\n    const email = e.target.value;\n    SetEmail(email);\n\n    if (email.length === 0) {\n      SetValidEmail(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showWelcomeMessage && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: email,\n          onChange: emailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), validEmail !== null && validEmail !== true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error email_error\",\n          children: \"Email is not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-color-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            maxLength: \"8\",\n            id: \"password\",\n            onChange: checkPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password_color\",\n            style: {\n              backgroundColor: passwordColor\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"10\",\n          pattern: \"\\\\d*\",\n          id: \"phone\",\n          onChange: PhoneHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), validPhoneNumber !== null && validPhoneNumber !== true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error phone_error\",\n          children: \"Phone must have atmost 10 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\",\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), showWelcomeMessage && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"welcome\",\n      children: [\" \", \"Thank you for sign up. We will get back to you soon!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"XCoijcjzzxLHM/Mb6M2z9dfaJlo=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/var/REACT/react_practice/react_learning/react_projects/src/components/Form/Form.js"],"names":["React","useState","useEffect","Form","validEmail","SetValidEmail","email","SetEmail","validPhoneNumber","SetValidPhoneNumber","phoneNumber","SetPhoneNumber","passwordColor","SetPasswordColor","ValidPassword","SetValidPassword","showWelcomeMessage","SetShowWelcomeMessage","isValidEmail","console","log","checkingEmail","String","toLowerCase","match","checkPassword","e","password","target","value","strength","length","formSubmitHandler","preventDefault","PhoneHandler","emailHandler","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./form.css\";\n\nconst Form = () => {\n  const [validEmail, SetValidEmail] = useState(null);\n  const [email, SetEmail] = useState(\"\");\n  const [validPhoneNumber, SetValidPhoneNumber] = useState(null);\n  const [phoneNumber, SetPhoneNumber] = useState(\"\");\n  const [passwordColor, SetPasswordColor] = useState(\"transparent\");\n  const [ValidPassword, SetValidPassword] = useState(false);\n  const [showWelcomeMessage, SetShowWelcomeMessage] = useState(false);\n\n  const isValidEmail = (email) => {\n    console.log(email);\n    const checkingEmail = String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      ); // true or false\n    return checkingEmail;\n  };\n\n  function checkPassword(e) {\n    const password = e.target.value;\n    let strength = 0;\n    if (password.match(/[a-z]+/)) {\n      strength += 1;\n    }\n    if (password.match(/[A-Z]+/)) {\n      strength += 1;\n    }\n    if (password.match(/[0-9]+/)) {\n      strength += 1;\n    }\n    if (password.match(/[$@#&!]+/)) {\n      strength += 1;\n    }\n\n    if (password.length > 4 && password.length <= 8 && strength === 4) {\n      strength += 1;\n    }\n\n    switch (strength) {\n      case 0:\n        SetPasswordColor(\"transparent\");\n        break;\n\n      case 1:\n      case 2:\n        SetPasswordColor(\"red\");\n        break;\n\n      case 3:\n      case 4:\n        SetPasswordColor(\"yellow\");\n        break;\n\n      case 5:\n        SetPasswordColor(\"#15da15\");\n        SetValidPassword(true);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    const checkingEmail = isValidEmail(email);\n    if (checkingEmail) {\n      SetValidEmail(true);\n    } else {\n      SetValidEmail(false);\n    }\n\n    if (phoneNumber.length < 10) {\n      SetValidPhoneNumber(false);\n    } else {\n      SetValidPhoneNumber(true);\n    }\n\n    if (\n      validPhoneNumber === true &&\n      validEmail === true &&\n      ValidPassword === true\n    ) {\n      SetShowWelcomeMessage(true);\n    }\n  };\n  const PhoneHandler = (e) => {\n    const phoneNumber = e.target.value;\n    SetPhoneNumber(phoneNumber);\n    if (phoneNumber.length === 0) {\n      SetValidPhoneNumber(null);\n    }\n  };\n\n  const emailHandler = (e) => {\n    const email = e.target.value;\n    SetEmail(email);\n    if (email.length === 0) {\n      SetValidEmail(null);\n    }\n  };\n\n  return (\n    <>\n      {!showWelcomeMessage && (\n        <form onSubmit={formSubmitHandler}>\n        <header>Login Form</header>\n          <div className=\"email_container\">\n            <label htmlFor=\"email\">Email</label>\n            {/* we can also use type=\"email\" */}\n            <input\n              type=\"text\"\n              id=\"email\"\n              value={email}\n              onChange={emailHandler}\n            />\n            {validEmail !== null && validEmail !== true && (\n              <div className=\"error email_error\">Email is not valid</div>\n            )}\n          </div>\n          <div className=\"password_container\">\n            <label htmlFor=\"password\">Password</label>\n            <div className=\"password-color-wrapper\">\n              <input\n                type=\"password\"\n                maxLength=\"8\"\n                id=\"password\"\n                onChange={checkPassword}\n              />\n              <div\n                className=\"password_color\"\n                style={{ backgroundColor: passwordColor }}\n              ></div>\n            </div>\n          </div>\n          <div className=\"phone_container\">\n            <label htmlFor=\"phone\">Phone</label>\n            <input\n              type=\"text\"\n              maxLength=\"10\"\n              pattern=\"\\d*\"\n              id=\"phone\"\n              onChange={PhoneHandler}\n            />\n            {validPhoneNumber !== null && validPhoneNumber !== true && (\n              <div className=\"error phone_error\">\n                Phone must have atmost 10 digits\n              </div>\n            )}\n          </div>\n\n          <div className=\"submitButtonContainer\">\n            <input type=\"submit\" value=\"submit\" className=\"button\" />\n          </div>\n        </form>\n      )}\n\n      {showWelcomeMessage && (\n        <h1 className=\"welcome\">\n          {\" \"}\n          Thank you for sign up. We will get back to you soon!\n        </h1>\n      )}\n    </>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}